name: CI

on:
  push:
    branches: ["*"]
    tags-ignore: ["**"]
  pull_request:

env:
  PACKAGE_NAME: Crystal

jobs:
  macos-arm:
    name: macOS (arm64)
    runs-on: macos-15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint
        uses: cirruslabs/swiftlint-action@v1
        with:
          version: latest

      - name: Build and Test
        run: swift test --enable-code-coverage

      - name: Prepare coverage report
        if: github.ref == 'refs/heads/master'
        run: xcrun llvm-cov export -format="lcov" .build/debug/${{ env.PACKAGE_NAME }}PackageTests.xctest/Contents/MacOS/${{ env.PACKAGE_NAME }}PackageTests -instr-profile .build/debug/codecov/default.profdata > macos-arm64.lcov

      - name: Cache coverage report
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-macos-arm64
          path: macos-arm64.lcov

  macos-intel:
    name: macOS (x64)
    runs-on: macos-15-large
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint
        uses: cirruslabs/swiftlint-action@v1
        with:
          version: latest

      - name: Build and Test
        run: swift test --enable-code-coverage

      - name: Prepare coverage report
        if: github.ref == 'refs/heads/master'
        run: xcrun llvm-cov export -format="lcov" .build/debug/${{ env.PACKAGE_NAME }}PackageTests.xctest/Contents/MacOS/${{ env.PACKAGE_NAME }}PackageTests -instr-profile .build/debug/codecov/default.profdata > macos-x64.lcov

      - name: Cache coverage report
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-macos-x64
          path: macos-x64.lcov

  test-coverage:
    name: Test Coverage
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [macos-arm, macos-intel]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore coverage reports
        uses: actions/download-artifact@v4
        with:
          path: coverage-reports
          pattern: coverage-report-*
          merge-multiple: true

      - name: Upload test coverage
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          directory: coverage-reports
          token: ${{ secrets.CODECOV_TOKEN }}
